# delete duplicate history lines
OS=$(uname)

export LANG='en_US.UTF-8'
export HISTCONTROL=ignoreboth:erasedups
export EDITOR='nvim'
export BROWSER='chromium'
export COLUMNS=${COLUMNS}
export LINES=${LINES}

if [[ "$OS" == 'Darwin' ]];then
  alias ls='ls -G'
elif [[ "$OS" == 'Linux' ]];then
  alias ls='ls --color=auto'
fi

alias rm='rm -i'
alias xmind='XMind'
alias less='less -R'
alias grep='grep --color=auto'
alias vim='nvim'

# tmux workspace alias
alias oslo="tmux_apporc oslo"
alias algo="tmux_apporc algorithm"
alias golang="tmux_apporc golang"

# ssh-agent configuration

if [[ "$OS" != 'Darwin' ]];then

    SSH_AGENT_DIR="${HOME}/.cache/ssh-agent"
    SSH_AGENT_SOCK="ssh-agent.socket"
    SSH_AGENT_PID="ssh-agent.pid"
    export SSH_AUTH_SOCK=${SSH_AGENT_DIR}/${SSH_AGENT_SOCK}
    if [ ! -d $SSH_AGENT_DIR ]
    then
    mkdir -p $SSH_AGENT_DIR
    fi
    if ! pgrep -u $USER ssh-agent > /dev/null; then
        rm -f ${SSH_AUTH_SOCK}
        ssh-agent -a $SSH_AUTH_SOCK > ${SSH_AGENT_DIR}/${SSH_AGENT_PID}
    fi
    if [[ "$SSH_AGENT_PID" == "" ]]; then
        eval $(<${SSH_AGENT_DIR}/${SSH_AGENT_PID})
    fi
fi

# scripts of myself

export PATH=${HOME}/Projects/dotfiles/scripts:${PATH}

# cabal
export PATH=${HOME}/.cabal/bin/:${PATH}

# dart lang
export PATH=${HOME}/Projects/dart:${PATH}

export GOPATH=${HOME}/Projects/go
export PATH=${GOPATH}/bin:${PATH}

# adt
export PATH=/home/apporc/Software/devtool/adt-bundle-linux-x86_64-20140702/sdk/platform-tools:${PATH}
export PATH=/usr/local/bin/apporc:${PATH}

# ruby
export PATH=${HOME}/.gem/ruby/2.1.0/bin:${PATH}

# android studio sdk
export ANDROID_HOME=~/Projects/Android/sdk
export PATH=${ANDROID_HOME}/tools:${PATH}
export PATH=${ANDROID_HOME}/platform-tools:${PATH}

# chromiumos dev, repo cmd
export PATH=${HOME}/Projects/depot_tools:${PATH}

# android dev, repo cmd
export PATH=${HOME}/Projects/android_repo:${PATH}

# arcanist
export PATH=${HOME}/Projects/arcanist/bin:${PATH}

# npm
export PATH=${HOME}/Projects/npm-packages/bin:${PATH}

# mac brew python2
export PATH=/usr/local/opt/python@2/bin:${PATH}

# proxy command on mac
function proxy_off(){
    unset http_proxy
    unset https_proxy
    echo -e "proxy off"
}
function proxy_on() {
    export no_proxy="localhost,127.0.0.1,localaddress,.localdomain.com"
    export http_proxy="http://127.0.0.1:1087"
    export https_proxy=$http_proxy
    echo -e "proxy on"
}

[[ -z $DISPLAY && $XDG_VTNR -eq 1 ]] && exec startx
